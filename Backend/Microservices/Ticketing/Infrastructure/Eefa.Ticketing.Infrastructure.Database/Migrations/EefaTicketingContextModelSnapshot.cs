// <auto-generated />
using System;
using Eefa.Ticketing.Infrastructure.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Eefa.Ticketing.Infrastructure.Database.Migrations
{
    [DbContext(typeof(EefaTicketingContext))]
    partial class EefaTicketingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Ticketing")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Eefa.Ticketing.Domain.Core.Entities.Tickets.DetailHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<int>("OwnerRoleId")
                        .HasColumnType("int");

                    b.Property<int>("PrimaryRoleId")
                        .HasColumnType("int")
                        .HasComment("دپارتمان اولیه");

                    b.Property<int>("SecondaryRoleId")
                        .HasColumnType("int")
                        .HasComment("دپارتمان ارجاع داده شده");

                    b.Property<int>("TicketDetailId")
                        .HasColumnType("int")
                        .HasComment("کلید خارجی از جزییات تیکت");

                    b.HasKey("Id");

                    b.HasIndex("TicketDetailId");

                    b.ToTable("DetailHistories");
                });

            modelBuilder.Entity("Eefa.Ticketing.Domain.Core.Entities.Tickets.PrivetMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int?>("DetailHistoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)")
                        .HasComment("پیام");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<int>("OwnerRoleId")
                        .HasColumnType("int");

                    b.Property<int>("TicketDetailId")
                        .HasColumnType("int")
                        .HasComment("کلید خارجی از جزییات تیکت");

                    b.HasKey("Id");

                    b.HasIndex("DetailHistoryId");

                    b.HasIndex("TicketDetailId");

                    b.ToTable("PrivetMessages");
                });

            modelBuilder.Entity("Eefa.Ticketing.Domain.Core.Entities.Tickets.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<int>("OwnerRoleId")
                        .HasColumnType("int");

                    b.Property<string>("PageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("صفحه ای که روی آن تیکت خورده");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasComment("اولیت");

                    b.Property<int?>("ReceiverUserId")
                        .HasColumnType("int")
                        .HasComment("کاربر دریافت کننده");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasComment("دپارتمان دریافت کننده");

                    b.Property<string>("RoleTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("نام دپارتمان دریافت کننده");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("وضعیت: ایجاد شده=0، پاسخ کاربر ایجاد کننده=1، پاسخ کاربر دریافت کننده=2، ارجاع داده شده=3، در دست اقدام=4، بسته شده توسط کاربر ایجاد کننده=5، بسته شده توسط کاربر پاسخ دهنده=6بسته شده توسط سیستم=7");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("عنوان تیکت");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Eefa.Ticketing.Domain.Core.Entities.Tickets.TicketDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentIds")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("شناسه فایل پیوست شده");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1200)
                        .HasColumnType("nvarchar(1200)")
                        .HasComment("توضیحات تیکت");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<int>("OwnerRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2(7)")
                        .HasComment("تاریخ مشاهده تیکت توسط دریافت کننده");

                    b.Property<int?>("ReaderUserId")
                        .HasColumnType("int")
                        .HasComment("کاربر خواننده تیکت");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasComment("دپارتمان دریافت کننده");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketDetails");
                });

            modelBuilder.Entity("Eefa.Ticketing.Domain.Core.Entities.Tickets.DetailHistory", b =>
                {
                    b.HasOne("Eefa.Ticketing.Domain.Core.Entities.Tickets.TicketDetail", "TicketDetail")
                        .WithMany("DetailHistories")
                        .HasForeignKey("TicketDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TicketDetail");
                });

            modelBuilder.Entity("Eefa.Ticketing.Domain.Core.Entities.Tickets.PrivetMessage", b =>
                {
                    b.HasOne("Eefa.Ticketing.Domain.Core.Entities.Tickets.DetailHistory", "DetailHistory")
                        .WithMany("PrivetMessages")
                        .HasForeignKey("DetailHistoryId");

                    b.HasOne("Eefa.Ticketing.Domain.Core.Entities.Tickets.TicketDetail", "TicketDetail")
                        .WithMany("PrivetMessages")
                        .HasForeignKey("TicketDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetailHistory");

                    b.Navigation("TicketDetail");
                });

            modelBuilder.Entity("Eefa.Ticketing.Domain.Core.Entities.Tickets.TicketDetail", b =>
                {
                    b.HasOne("Eefa.Ticketing.Domain.Core.Entities.Tickets.Ticket", "Ticket")
                        .WithMany("TicketDetails")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Eefa.Ticketing.Domain.Core.Entities.Tickets.DetailHistory", b =>
                {
                    b.Navigation("PrivetMessages");
                });

            modelBuilder.Entity("Eefa.Ticketing.Domain.Core.Entities.Tickets.Ticket", b =>
                {
                    b.Navigation("TicketDetails");
                });

            modelBuilder.Entity("Eefa.Ticketing.Domain.Core.Entities.Tickets.TicketDetail", b =>
                {
                    b.Navigation("DetailHistories");

                    b.Navigation("PrivetMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
