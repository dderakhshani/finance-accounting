// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Purchase.Infrastructure.Context;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Purchase.Domain.Entities;

#nullable disable

namespace Eefa.Purchase.Infrastructure.Context.Configurations
{
    public partial class TurnConfiguration : IEntityTypeConfiguration<Turn>
    {
        public void Configure(EntityTypeBuilder<Turn> entity)
        {
            entity.ToTable("Turns", "logistic");

            entity.HasComment("نوبت ها");

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.AnnouncedCustomerFullName)
                .HasMaxLength(50)
                .HasComment("نام مشتری اعلامی");

            entity.Property(e => e.AnnouncedDestinationAddress)
                .IsRequired()
                .HasMaxLength(250)
                .HasComment("مقصد اعلامی");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.DriverId).HasComment("کد راننده");

            entity.Property(e => e.FreightId).HasComment("کد شرکت حمل و نقل");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.LoadedDate).HasComment("تاریخ بارگیری");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.StatusTypeBaseId).HasComment("وضعیت نوبت");

            entity.Property(e => e.TurnNumber).HasComment("شماره نوبت");

            entity.Property(e => e.VehicleId).HasComment("کد وسیله نقلیه");

            entity.Property(e => e.WarehouseId).HasComment("کد انبار");

            entity.HasOne(d => d.Driver)
                .WithMany(p => p.Turns)
                .HasForeignKey(d => d.DriverId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Turns_Drivers");

            entity.HasOne(d => d.Freight)
                .WithMany(p => p.Turns)
                .HasForeignKey(d => d.FreightId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Turns_Freights");

            entity.HasOne(d => d.StatusTypeBase)
                .WithMany(p => p.Turns)
                .HasForeignKey(d => d.StatusTypeBaseId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Turns_BaseValues");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Turn> entity);
    }
}
