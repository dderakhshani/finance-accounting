// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Purchase.Infrastructure.Context;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Purchase.Domain.Entities;

#nullable disable

namespace Eefa.Purchase.Infrastructure.Context.Configurations
{
    public partial class WarehouseLayoutPropertyConfiguration : IEntityTypeConfiguration<WarehouseLayoutProperty>
    {
        public void Configure(EntityTypeBuilder<WarehouseLayoutProperty> entity)
        {
            entity.ToTable("WarehouseLayoutProperties", "inventory");

            entity.HasComment("ویژگی های موقعیت ها در انبار");

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.CategoryPropertyId).HasComment("کد ویژگی گروه");

            entity.Property(e => e.CategoryPropertyItemId).HasComment("کد آیتم ویژگی گروه");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.Value).HasComment("مقدار");

            entity.Property(e => e.WarehouseLayoutId).HasComment("کد چیدمان انبار");

            entity.HasOne(d => d.CategoryProperty)
                .WithMany(p => p.WarehouseLayoutProperties)
                .HasForeignKey(d => d.CategoryPropertyId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WarehouseLayoutProperties_CommodityCategoryProperties");

            entity.HasOne(d => d.CategoryPropertyItem)
                .WithMany(p => p.WarehouseLayoutProperties)
                .HasForeignKey(d => d.CategoryPropertyItemId)
                .HasConstraintName("FK_WarehouseLayoutProperties_CommodityCategoryPropertyItems");

            entity.HasOne(d => d.WarehouseLayout)
                .WithMany(p => p.WarehouseLayoutProperties)
                .HasForeignKey(d => d.WarehouseLayoutId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WarehouseLayoutProperties_WarehouseLayout");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<WarehouseLayoutProperty> entity);
    }
}
