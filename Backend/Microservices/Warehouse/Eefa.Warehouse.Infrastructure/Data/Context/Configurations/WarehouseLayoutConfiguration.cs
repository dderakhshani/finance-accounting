// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Commodity.Data.Entities;
using Eefa.Common;
using Eefa.Common.Data;
using Eefa.Warehouse.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace Eefa.Warehouse.Infrastructure.Data.Context.Configurations
{
    public partial class WarehouseLayoutConfiguration : IEntityTypeConfiguration<WarehouseLayout>
    {
        public void Configure(EntityTypeBuilder<WarehouseLayout> entity)
        {
            entity.HasKey(e => e.Id).HasName("PK_WarehouseLayout");

            entity.ToTable("WarehouseLayouts", "inventory", tb =>
                {
                    tb.HasComment("موقعیت های انبار");
                    tb.HasTrigger("WarehouseLayoutsInsertTrriger");
                });

            entity.HasIndex(e => e.LastLevel, "IX_WarehouseLayouts_LastLevel");

            entity.HasIndex(e => e.ParentId, "IX_WarehouseLayouts_ParentId");

            entity.HasIndex(e => e.WarehouseId, "IX_WarehouseLayouts_WarehouseId");

            entity.Property(e => e.Id).HasComment("شناسه");
            entity.Property(e => e.Capacity).HasComment("ظرفیت");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");
            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");
            entity.Property(e => e.EndIndex).HasComment("شماره پایان");
            entity.Property(e => e.EntryMode).HasComment(" 0 NONE - 1 LIFO - 2 FIFO حالت ورود اطلاعات  ");
            entity.Property(e => e.IsChildSequncial).HasComment("زیر مجموعه بصورت سریال است");
            entity.Property(e => e.IsDefault)
                .HasDefaultValue(false)
                .HasComment("موقعیت پیش فرض");
            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");
            entity.Property(e => e.LastLevel).HasComment("سطح آخر هست");
            entity.Property(e => e.LevelCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValueSql("((1))")
                .HasComment("کد سطح");
            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");
            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");
            entity.Property(e => e.OrderIndex).HasComment("ترتیب نمایش");
            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");
            entity.Property(e => e.ParentId).HasComment("کد والد");
            entity.Property(e => e.StartIndex).HasComment("شماره شروع");
            entity.Property(e => e.Status).HasComment("0 آزاد \r\n1 فقط ورودی \r\n2 فقط خروجی \r\n3 قفل موقت \r\n4 قفل دائم \r\n");
            entity.Property(e => e.Title)
                .HasMaxLength(100)
                .HasComment("عنوان");
            entity.Property(e => e.UnitBaseTypeId).HasComment("نوع واحد کالا");
            entity.Property(e => e.WarehouseId).HasComment("کد انبار");

            entity.HasOne(d => d.Parent).WithMany(p => p.InverseParent)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK_WarehouseLayout_WarehouseLayout");

            entity.HasOne(d => d.Warehouse).WithMany(p => p.WarehouseLayouts)
                .HasForeignKey(d => d.WarehouseId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_WarehouseLayout_Warehouses");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<WarehouseLayout> entity);
    }
}
