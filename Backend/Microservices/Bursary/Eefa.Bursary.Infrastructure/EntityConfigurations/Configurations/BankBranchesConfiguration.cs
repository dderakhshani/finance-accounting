// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Bursary.Infrastructure.EntityConfigurations;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Bursary.Domain.Entities.Definitions;
#nullable disable

namespace Eefa.Bursary.Infrastructure.EntityConfigurations.Configurations
{
    public partial class BankBranchesConfiguration : IEntityTypeConfiguration<BankBranches>
    {
        public void Configure(EntityTypeBuilder<BankBranches> entity)
        {
            entity.ToTable("BankBranches", "bursary");

            entity.HasComment("شعب بانک");

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.Address)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("آدرس");

            entity.Property(e => e.BankId).HasComment("کد بانک");

            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("کد شعبه");

            entity.Property(e => e.CountryDivisionId).HasComment("کد شهر");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.ManagerFullName)
                .HasMaxLength(50)
                .HasComment("نام مدیر شعبه");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");


            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("عنوان");

            entity.HasOne(d => d.Bank)
                .WithMany(p => p.BankBranches)
                .HasForeignKey(d => d.BankId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BankBranches_Banks");

            entity.HasOne(d => d.CountryDivision)
                .WithMany(p => p.BankBranches)
                .HasForeignKey(d => d.CountryDivisionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BankBranches_CountryDivisions");

            entity.HasOne(d => d.CreatedBy)
                .WithMany(p => p.BankBranchesCreatedBies)
                .HasForeignKey(d => d.CreatedById)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BankBranches_Users");

            entity.HasOne(d => d.ModifiedBy)
                .WithMany(p => p.BankBranchesModifiedBies)
                .HasForeignKey(d => d.ModifiedById)
                .HasConstraintName("FK_BankBranches_Users1");

            entity.HasOne(d => d.OwnerRole)
                .WithMany(p => p.BankBranches)
                .HasForeignKey(d => d.OwnerRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BankBranches_Roles");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<BankBranches> entity);
    }
}
