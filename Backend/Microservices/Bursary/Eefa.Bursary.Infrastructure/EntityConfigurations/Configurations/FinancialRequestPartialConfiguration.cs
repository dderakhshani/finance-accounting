// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Bursary.Infrastructure.EntityConfigurations;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Bursary.Domain.Entities;
#nullable disable

namespace Eefa.Bursary.Infrastructure.EntityConfigurations.Configurations
{
    public partial class FinancialRequestPartialConfiguration : IEntityTypeConfiguration<FinancialRequestPartial>
    {
        public void Configure(EntityTypeBuilder<FinancialRequestPartial> entity)
        {
            entity.ToTable("FinancialRequestPartial", "bursary");

            entity.HasComment("جزئیات درخواست مالی");

            entity.Property(e => e.Amount).HasColumnType("money");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.CreditAccountReferenceGroupId).HasComment("گروه بستانکار");

            entity.Property(e => e.CreditAccountReferenceId).HasComment("کد بستانکار");

            entity.Property(e => e.DebitAccountReferenceGroupId).HasComment("گروه بدهکار");

            entity.Property(e => e.DebitAccountReferenceId).HasComment("کد بدهکار");

            entity.Property(e => e.FinancialRequestId).HasComment("شماره فرم عملیات مالی");

            entity.Property(e => e.IsAccumulativeSelectStatus).HasComment(@"0 انتخاب نشده 
1 انتخاب خزانه داری
2 انتخاب بازرگانی 
3 انتخاب هر دو ");

            entity.Property(e => e.IssueDate).HasComment("تاریخ صدور");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OrderIndex).HasDefaultValueSql("((1))");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.RealDate).HasComment("تاریخ دریافت/پرداخت ");

            entity.Property(e => e.RequestDate).HasComment("تاریخ درخواست ");

            entity.Property(e => e.TrackingCode)
                .HasMaxLength(50)
                .HasComment("شناسه پرداخت ");

            entity.HasOne(d => d.ChequeSheet)
                .WithMany(p => p.FinancialRequestPartials)
                .HasForeignKey(d => d.ChequeSheetId)
                .HasConstraintName("FK_RequestPaymentPartial_ChequeSheets");

            entity.HasOne(d => d.CreatedBy)
                .WithMany(p => p.FinancialRequestPartialCreatedBies)
                .HasForeignKey(d => d.CreatedById)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FinancialRequestPartial_Users1");

            entity.HasOne(d => d.CreditAccountHead)
                .WithMany(p => p.FinancialRequestPartialCreditAccountHeads)
                .HasForeignKey(d => d.CreditAccountHeadId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FinancialRequestPartial_AccountHead");

            entity.HasOne(d => d.CreditAccountReferencesGroup)
                .WithMany(p => p.FinancialRequestPartialCreditAccountReferencesGroups)
                .HasForeignKey(d => d.CreditAccountReferenceGroupId)
                .HasConstraintName("FK_FinancialRequestPartial_AccountReferencesGroups");

            entity.HasOne(d => d.CreditReference)
                .WithMany(p => p.FinancialRequestPartialCreditReferences)
                .HasForeignKey(d => d.CreditAccountReferenceId)
                .HasConstraintName("FK_FinancialRequestPartial_AccountReferences");

            entity.HasOne(d => d.DebitAccountHead)
                .WithMany(p => p.FinancialRequestPartialDebitAccountHeads)
                .HasForeignKey(d => d.DebitAccountHeadId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FinancialRequestPartial_AccountHead1");

            entity.HasOne(d => d.DebitAccountReferencesGroup)
                .WithMany(p => p.FinancialRequestPartialDebitAccountReferencesGroups)
                .HasForeignKey(d => d.DebitAccountReferenceGroupId)
                .HasConstraintName("FK_FinancialRequestPartial_AccountReferencesGroups1");

            entity.HasOne(d => d.DebitReference)
                .WithMany(p => p.FinancialRequestPartialDebitReferences)
                .HasForeignKey(d => d.DebitAccountReferenceId)
                .HasConstraintName("FK_FinancialRequestPartial_AccountReferences1");

            entity.HasOne(d => d.FinancialRequest)
                .WithMany(p => p.FinancialRequestPartials)
                .HasForeignKey(d => d.FinancialRequestId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FinancialRequestPartial_FinancialRequests");

            entity.HasOne(d => d.ModifiedBy)
                .WithMany(p => p.FinancialRequestPartialModifiedBies)
                .HasForeignKey(d => d.ModifiedById)
                .HasConstraintName("FK_FinancialRequestPartial_Users");

            entity.HasOne(d => d.OwnerRole)
                .WithMany(p => p.FinancialRequestPartials)
                .HasForeignKey(d => d.OwnerRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FinancialRequestPartial_Roles");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<FinancialRequestPartial> entity);
    }
}
