// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Bursary.Infrastructure.EntityConfigurations;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Bursary.Domain.Entities;
#nullable disable

namespace Eefa.Bursary.Infrastructure.EntityConfigurations.Configurations
{
    public partial class PayChequeConfiguration : IEntityTypeConfiguration<PayCheque>
    {
        public void Configure(EntityTypeBuilder<PayCheque> entity)
        {
            entity.ToTable("PayCheque", "bursary");

            entity.HasComment("دسته چک");

            entity.Property(e => e.BankAccountId).HasComment("شماره حساب بانک ");

            entity.Property(e => e.ChequeNumberIdentification)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("شماره دسته چک ");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.IsFinished).HasComment("اتمام دسته چک ");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerEmployeeId).HasComment("کد صاحب چک ");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.SetOwnerTime).HasComment("تاریخ تحویل چک ");

            entity.Property(e => e.SheetsCount).HasComment("تعداد برگ ");

            entity.HasOne(d => d.BankAccount)
                .WithMany(p => p.PayCheques)
                .HasForeignKey(d => d.BankAccountId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PayCheque_BankAccounts");

            entity.HasOne(d => d.ChequeTypeBase)
                .WithMany(p => p.PayCheques)
                .HasForeignKey(d => d.ChequeTypeBaseId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PayCheque_BaseValues");

            entity.HasOne(d => d.CreatedBy)
                .WithMany(p => p.PayChequeCreatedBies)
                .HasForeignKey(d => d.CreatedById)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PayCheque_Users1");

            entity.HasOne(d => d.ModifiedBy)
                .WithMany(p => p.PayChequeModifiedBies)
                .HasForeignKey(d => d.ModifiedById)
                .HasConstraintName("FK_PayCheque_Users");

            entity.HasOne(d => d.OwnerRole)
                .WithMany(p => p.PayCheques)
                .HasForeignKey(d => d.OwnerRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PayCheque_Roles");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PayCheque> entity);
    }
}
