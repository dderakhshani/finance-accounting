// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Bursary.Infrastructure.EntityConfigurations;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Bursary.Domain.Entities;
#nullable disable

namespace Eefa.Bursary.Infrastructure.EntityConfigurations.Configurations
{
    public partial class VoucherDetailAttachmentsConfiguration : IEntityTypeConfiguration<VoucherDetailAttachments>
    {
        public void Configure(EntityTypeBuilder<VoucherDetailAttachments> entity)
        {
            entity.ToTable("VoucherDetailAttachments", "accounting");

            entity.HasIndex(e => new { e.VoucherDetailId, e.AttachmentId })
                .HasName("IX_VoucherDetailAttachments")
                .IsUnique();

            entity.Property(e => e.Id)
                .HasComment("شناسه")
                .ValueGeneratedNever();

            entity.Property(e => e.AttachmentId).HasComment("کد پیوست");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.VoucherDetailId).HasComment("کد آرتیکل سند حسابداری ");

            entity.HasOne(d => d.Attachment)
                .WithMany(p => p.VoucherDetailAttachments)
                .HasForeignKey(d => d.AttachmentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_VoucherDetailAttachments_Attachment");

            entity.HasOne(d => d.OwnerRole)
                .WithMany(p => p.VoucherDetailAttachments)
                .HasForeignKey(d => d.OwnerRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_VoucherDetailAttachments_Roles");

            entity.HasOne(d => d.VoucherDetail)
                .WithMany(p => p.VoucherDetailAttachments)
                .HasForeignKey(d => d.VoucherDetailId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_VoucherDetailAttachments_VouchersDetail");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<VoucherDetailAttachments> entity);
    }
}
