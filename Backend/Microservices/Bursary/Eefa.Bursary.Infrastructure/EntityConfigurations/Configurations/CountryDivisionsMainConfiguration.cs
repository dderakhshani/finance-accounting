// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Bursary.Infrastructure.EntityConfigurations;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Bursary.Domain.Entities;
#nullable disable

namespace Eefa.Bursary.Infrastructure.EntityConfigurations.Configurations
{
    public partial class CountryDivisionsMainConfiguration : IEntityTypeConfiguration<CountryDivisionsMain>
    {
        public void Configure(EntityTypeBuilder<CountryDivisionsMain> entity)
        {
            entity.ToTable("CountryDivisionsMain", "common");

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.Bakhsh)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("کد بخش");

            entity.Property(e => e.BakhshTitle)
                .HasMaxLength(255)
                .HasComment("نام بخش");

            entity.Property(e => e.Blkabd).HasMaxLength(255);

            entity.Property(e => e.CodeRec).HasMaxLength(255);

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById)
                .HasDefaultValueSql("((4))")
                .HasComment("ایجاد کننده");

            entity.Property(e => e.Diag).HasMaxLength(255);

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById)
                .HasDefaultValueSql("((4))")
                .HasComment("اصلاح کننده");

            entity.Property(e => e.Name).HasMaxLength(255);

            entity.Property(e => e.Ostan)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("کد استان");

            entity.Property(e => e.OstanTitle)
                .HasMaxLength(255)
                .HasComment("نام استان");

            entity.Property(e => e.OwnerRoleId)
                .HasDefaultValueSql("((1))")
                .HasComment("نقش صاحب سند");

            entity.Property(e => e.Shahrestan)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("کد شهرستان");

            entity.Property(e => e.ShahrestanTitle)
                .HasMaxLength(255)
                .HasComment("نام شهرستان");

            entity.Property(e => e.ShrDeh).HasMaxLength(10);

            entity.Property(e => e.ShrDehTitle).HasMaxLength(255);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CountryDivisionsMain> entity);
    }
}
