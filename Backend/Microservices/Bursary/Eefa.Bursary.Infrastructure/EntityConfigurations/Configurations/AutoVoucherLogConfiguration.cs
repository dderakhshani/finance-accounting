// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Bursary.Infrastructure.EntityConfigurations;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Bursary.Domain.Entities;
#nullable disable

namespace Eefa.Bursary.Infrastructure.EntityConfigurations.Configurations
{
    public partial class AutoVoucherLogConfiguration : IEntityTypeConfiguration<AutoVoucherLog>
    {
        public void Configure(EntityTypeBuilder<AutoVoucherLog> entity)
        {
            entity.ToTable("AutoVoucherLog", "accounting");

            entity.HasComment("تغییرات سندهای مکانیزه ");

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.ActionDate).HasComment("تاریخ فعالیت");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.ResultId).HasComment("کد نهایی");

            entity.Property(e => e.ResultName)
                .HasMaxLength(8)
                .HasComment("نام نهایی")
                .HasComputedColumnSql("(case [ResultId] when (1) then N'ثبت موفق' when (2) then N'بروز خطا'  end)");

            entity.Property(e => e.RowDescription)
                .HasMaxLength(300)
                .HasComment("توضیحات سطر");

            entity.Property(e => e.VoucherDate).HasComment("تاریخ سند");

            entity.Property(e => e.VoucherTypeId).HasComment("کد نوع سند");

            entity.HasOne(d => d.OwnerRole)
                .WithMany(p => p.AutoVoucherLogs)
                .HasForeignKey(d => d.OwnerRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_AutoVoucherLog_Roles");

            entity.HasOne(d => d.VoucherType)
                .WithMany(p => p.AutoVoucherLogs)
                .HasForeignKey(d => d.VoucherTypeId)
                .HasConstraintName("FK_AutoVoucherLog_CodeVoucherGroups");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<AutoVoucherLog> entity);
    }
}
