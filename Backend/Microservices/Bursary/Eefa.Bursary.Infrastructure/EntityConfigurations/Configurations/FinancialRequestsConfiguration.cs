// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Bursary.Infrastructure.EntityConfigurations;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Bursary.Domain.Aggregates.FinancialRequestAggregate;

#nullable disable

namespace Eefa.Bursary.Infrastructure.EntityConfigurations.Configurations
{
    public partial class FinancialRequestsConfiguration : IEntityTypeConfiguration<FinancialRequest>
    {
        public void Configure(EntityTypeBuilder<FinancialRequest> entity)
        {
            entity.ToTable("FinancialRequests", "bursary");

            entity.HasComment("درخواست های مالی");

            entity.HasIndex(e => e.WorkflowId).HasName("IX_Workflow");

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.Amount)
                .HasColumnType("money")
                .HasComment("مبلغ");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.DeductAmount)
                .HasColumnType("money")
                .HasComment("مقدار کسر شده از پرداخت");

            entity.Property(e => e.DeductionReason).HasComment("شرح علت کسراز پرداخت ");

            entity.Property(e => e.Description).HasComment("توضیحات");

            entity.Property(e => e.DocumentDate).HasComment("تاریخ سند");

            entity.Property(e => e.DocumentNo).HasComment("شماره فرم عملیات مالی");

            entity.Property(e => e.DocumentSerial).HasComment("شماره سریال سند - کد سال +کد شعبه +کد سیستم ");

            entity.Property(e => e.ExpireDate).HasComment("تاریخ انقضا");

            entity.Property(e => e.ExtraFieldJson).HasMaxLength(2000);

            entity.Property(e => e.FinancialStatusBaseId).HasComment("آخرین وضعیت سند");

            entity.Property(e => e.IsAccumulativePayment).HasComment("پرداخت تجمیعی");

            entity.Property(e => e.IsEmergent).HasComment("پرداخت فوری");

            entity.Property(e => e.IssueDate)
                .HasColumnType("datetime")
                .HasComment("تاریخ صدور");

            entity.Property(e => e.MissedDocumentJson).HasComment("جزئیات نواقص");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.PaymentStatus).HasComment(@"1= علی الحساب
2= پیش پرداخت
3= تسویه");

            entity.Property(e => e.PaymentTypeBaseId).HasComment("نوع پرداخت");

            entity.Property(e => e.TotalAmount)
                .HasColumnType("money")
                .HasComment("کل مبلغ قابل پرداخت ");

            entity.Property(e => e.VoucherHeadId).HasComment("کد سند حسابداری");

            entity.Property(e => e.WorkflowState)
                .HasMaxLength(50)
                .HasComment("وضعیت جریان کاری ");

            entity.Property(e => e.YearId).HasComment("کد سال");

            entity.HasOne(d => d.CodeVoucherGroup)
                .WithMany(p => p.FinancialRequests)
                .HasForeignKey(d => d.CodeVoucherGroupId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FinancialRequests_CodeVoucherGroups");

            entity.HasOne(d => d.CreatedBy)
                .WithMany(p => p.FinancialRequestsCreatedBies)
                .HasForeignKey(d => d.CreatedById)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FinancialRequests_Users");

            entity.HasOne(d => d.FinancialStatusBase)
                .WithMany(p => p.FinancialRequestsFinancialStatusBases)
                .HasForeignKey(d => d.FinancialStatusBaseId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FinancialRequests_BaseValues1");

            entity.HasOne(d => d.ModifiedBy)
                .WithMany(p => p.FinancialRequestsModifiedBies)
                .HasForeignKey(d => d.ModifiedById)
                .HasConstraintName("FK_FinancialRequests_Users1");

            entity.HasOne(d => d.OwnerRole)
                .WithMany(p => p.FinancialRequests)
                .HasForeignKey(d => d.OwnerRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FinancialRequests_Roles");

            entity.HasOne(d => d.PaymentTypeBase)
                .WithMany(p => p.FinancialRequestsPaymentTypeBases)
                .HasForeignKey(d => d.PaymentTypeBaseId)
                .HasConstraintName("FK_FinancialRequests_BaseValues");

            entity.HasOne(d => d.VoucherHead)
                .WithMany(p => p.FinancialRequests)
                .HasForeignKey(d => d.VoucherHeadId)
                .HasConstraintName("FK_FinancialRequests_VouchersHead");

            entity.HasOne(d => d.Workflow)
                .WithMany(p => p.FinancialRequests)
                .HasForeignKey(d => d.WorkflowId)
                .HasConstraintName("FK_FinancialRequests_Workflows");

            entity.HasOne(d => d.Year)
                .WithMany(p => p.FinancialRequests)
                .HasForeignKey(d => d.YearId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FinancialRequests_Years");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<FinancialRequest> entity);
    }
}
