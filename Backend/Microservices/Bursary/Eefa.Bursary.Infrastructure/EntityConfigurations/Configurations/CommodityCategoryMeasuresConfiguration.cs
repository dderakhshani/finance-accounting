// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Bursary.Infrastructure.EntityConfigurations;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Bursary.Domain.Entities;
#nullable disable

namespace Eefa.Bursary.Infrastructure.EntityConfigurations.Configurations
{
    public partial class CommodityCategoryMeasuresConfiguration : IEntityTypeConfiguration<CommodityCategoryMeasures>
    {
        public void Configure(EntityTypeBuilder<CommodityCategoryMeasures> entity)
        {
            entity.ToTable("CommodityCategoryMeasures", "common");

            entity.HasComment("ویژگی های گروه کالا");

            entity.HasIndex(e => new { e.CategoryId, e.MeasureId })
                .HasName("IX_CommodityCategoryMeasures")
                .IsUnique();

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.CategoryId).HasComment("کد گروه");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.MeasureId).HasComment("کد واحد اندازه گیری");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OrderIndex).HasComment("ترتیب نمایش");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.HasOne(d => d.Category)
                .WithMany(p => p.CommodityCategoryMeasures)
                .HasForeignKey(d => d.CategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CommodityCategoryMeasures_CommodityCategories");

            entity.HasOne(d => d.CreatedBy)
                .WithMany(p => p.CommodityCategoryMeasures)
                .HasForeignKey(d => d.CreatedById)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CommodityCategoryMeasures_Users");

            entity.HasOne(d => d.Measure)
                .WithMany(p => p.CommodityCategoryMeasures)
                .HasForeignKey(d => d.MeasureId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CommodityCategoryMeasures_MeasureUnits");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CommodityCategoryMeasures> entity);
    }
}
