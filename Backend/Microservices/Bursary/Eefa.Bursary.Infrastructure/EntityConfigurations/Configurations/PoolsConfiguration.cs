// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Bursary.Infrastructure.EntityConfigurations;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Bursary.Domain.Entities;
#nullable disable

namespace Eefa.Bursary.Infrastructure.EntityConfigurations.Configurations
{
    public partial class PoolsConfiguration : IEntityTypeConfiguration<Pools>
    {
        public void Configure(EntityTypeBuilder<Pools> entity)
        {
            entity.ToTable("Pools", "bpms");

            entity.HasIndex(e => e.ShapeId)
                .IsUnique();

            entity.HasIndex(e => e.WorkflowId);

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50)
                .IsFixedLength();

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.Type)
                .HasMaxLength(50)
                .IsFixedLength();

            entity.HasOne(d => d.Shape)
                .WithOne(p => p.Pools)
                .HasForeignKey<Pools>(d => d.ShapeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Pool_Shapes");

            entity.HasOne(d => d.Workflow)
                .WithMany(p => p.Pools)
                .HasForeignKey(d => d.WorkflowId)
                .HasConstraintName("FK_Pools_Workflows");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Pools> entity);
    }
}
