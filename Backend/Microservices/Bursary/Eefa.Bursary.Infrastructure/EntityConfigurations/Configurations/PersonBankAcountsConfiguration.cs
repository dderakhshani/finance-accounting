// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Bursary.Infrastructure.EntityConfigurations;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Bursary.Domain.Entities;
#nullable disable

namespace Eefa.Bursary.Infrastructure.EntityConfigurations.Configurations
{
    public partial class PersonBankAcountsConfiguration : IEntityTypeConfiguration<PersonBankAcounts>
    {
        public void Configure(EntityTypeBuilder<PersonBankAcounts> entity)
        {
            entity.ToTable("PersonBankAcounts", "bursary");

            entity.HasComment("حساب های بانکی شخص");

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.AccountNumber)
                .HasMaxLength(50)
                .HasComment("شماره حساب");

            entity.Property(e => e.AccountOwnerFullName)
                .IsRequired()
                .HasMaxLength(100)
                .HasComment("نام کامل شخص صاحب حساب");

            entity.Property(e => e.AccountOwnerRelativeTypeBaseId).HasComment("نوع ارتباط با شخص صاحب حساب ");

            entity.Property(e => e.BankBranchId).HasComment("کد شعبه");

            entity.Property(e => e.BankId).HasComment("کد بانک");

            entity.Property(e => e.CardNumber)
                .HasMaxLength(16)
                .HasComment("شماره کارت");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.Descriptions)
                .HasMaxLength(250)
                .HasComment("توضیحات");

            entity.Property(e => e.IbanNumber)
                .HasMaxLength(24)
                .IsUnicode(false)
                .HasComment("شماره شبا");

            entity.Property(e => e.IsActive).HasComment("فعال");

            entity.Property(e => e.IsDefault).HasComment("پیش فرض");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.PersonId).HasComment("کد شخص");

            entity.Property(e => e.TypeBaseId).HasComment("نوع حساب");

            entity.HasOne(d => d.AccountOwnerRelativeTypeBase)
                .WithMany(p => p.PersonBankAcounts)
                .HasForeignKey(d => d.AccountOwnerRelativeTypeBaseId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PersonBankAcounts_BaseValues");

            entity.HasOne(d => d.BankBranch)
                .WithMany(p => p.PersonBankAcounts)
                .HasForeignKey(d => d.BankBranchId)
                .HasConstraintName("FK_PersonBankAcounts_BankBranches");

            entity.HasOne(d => d.Bank)
                .WithMany(p => p.PersonBankAcounts)
                .HasForeignKey(d => d.BankId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PersonBankAcounts_Banks");

            entity.HasOne(d => d.CreatedBy)
                .WithMany(p => p.PersonBankAcountsCreatedBies)
                .HasForeignKey(d => d.CreatedById)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PersonBankAcounts_Users1");

            entity.HasOne(d => d.ModifiedBy)
                .WithMany(p => p.PersonBankAcountsModifiedBies)
                .HasForeignKey(d => d.ModifiedById)
                .HasConstraintName("FK_PersonBankAcounts_Users");

            entity.HasOne(d => d.OwnerRole)
                .WithMany(p => p.PersonBankAcounts)
                .HasForeignKey(d => d.OwnerRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PersonBankAcounts_Roles");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PersonBankAcounts> entity);
    }
}
