// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Bursary.Infrastructure.EntityConfigurations;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Bursary.Domain.Entities;
#nullable disable

namespace Eefa.Bursary.Infrastructure.EntityConfigurations.Configurations
{
    public partial class DocumentItemsBomConfiguration : IEntityTypeConfiguration<DocumentItemsBom>
    {
        public void Configure(EntityTypeBuilder<DocumentItemsBom> entity)
        {
            entity.ToTable("DocumentItemsBom", "common");

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.BomValueHeaderId).HasComment("شماره فرمول ساخت ");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.CurrencyBaseId).HasComment("نوع ارز");

            entity.Property(e => e.CurrencyPrice)
                .HasDefaultValueSql("((0))")
                .HasComment("مبلغ ارز");

            entity.Property(e => e.Description)
                .HasMaxLength(200)
                .HasComment("شرح کالا");

            entity.Property(e => e.IOMode)
                .HasDefaultValueSql("((1))")
                .HasComment("نوع ورود1 خروج -1");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.MainMeasureId).HasComment("واحد شمارش اصلی کالا");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.ParentCommodityId).HasComment("لوکیشن کالا در انبار ");

            entity.Property(e => e.ProductionCost).HasComment("قیمت پایه");

            entity.Property(e => e.Quantity).HasComment("تعداد");

            entity.Property(e => e.UnitBasePrice).HasComment("قیمت در سیستم  درخواست ");

            entity.Property(e => e.UnitPrice).HasComment("قیمت واحد ");

            entity.Property(e => e.Weight).HasComment("وزن کالا ");

            entity.HasOne(d => d.BomValueHeader)
                .WithMany(p => p.DocumentItemsBoms)
                .HasForeignKey(d => d.BomValueHeaderId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DocumentItemsBom_BomValueHeaders");

            entity.HasOne(d => d.Commodity)
                .WithMany(p => p.DocumentItemsBomCommodities)
                .HasForeignKey(d => d.CommodityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DocumentItemsBom_Commodities1");

            entity.HasOne(d => d.CreatedBy)
                .WithMany(p => p.DocumentItemsBomCreatedBies)
                .HasForeignKey(d => d.CreatedById)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DocumentItemsBom_Users");

            entity.HasOne(d => d.CurrencyBase)
                .WithMany(p => p.DocumentItemsBoms)
                .HasForeignKey(d => d.CurrencyBaseId)
                .HasConstraintName("FK_DocumentItemsBom_BaseValues");

            entity.HasOne(d => d.DocumentItems)
                .WithMany(p => p.DocumentItemsBoms)
                .HasForeignKey(d => d.DocumentItemsId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DocumentItemsBom_DocumentItems");

            entity.HasOne(d => d.MainMeasure)
                .WithMany(p => p.DocumentItemsBoms)
                .HasForeignKey(d => d.MainMeasureId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DocumentItemsBom_MeasureUnits");

            entity.HasOne(d => d.ModifiedBy)
                .WithMany(p => p.DocumentItemsBomModifiedBies)
                .HasForeignKey(d => d.ModifiedById)
                .HasConstraintName("FK_DocumentItemsBom_Users1");

            entity.HasOne(d => d.OwnerRole)
                .WithMany(p => p.DocumentItemsBoms)
                .HasForeignKey(d => d.OwnerRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DocumentItemsBom_Roles");

            entity.HasOne(d => d.ParentCommodity)
                .WithMany(p => p.DocumentItemsBomParentCommodities)
                .HasForeignKey(d => d.ParentCommodityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_DocumentItemsBom_Commodities");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<DocumentItemsBom> entity);
    }
}
