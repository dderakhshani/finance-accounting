trigger:
  branches:
      include:
      - develop

pool:
  vmImage: 'windows-latest'
  name: build

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  solution: '**/Eefa.SinaPlus.Backend.sln'
  project: '**/Microservices/Inventory/Eefa.Inventory.WebApi/Eefa.Inventory.WebApi.csproj'
  IISWebsiteName: 'SinaPlus.Inventory'
steps:
- script: "git config --global http.sslVerify false"
  displayName: "Configure Git"
- checkout: self
  displayName: "Clone repository"
- task: NuGetToolInstaller@1
  name: 'NugetToolInstaller'
  displayName: 'Nuget tool installer'

- task: NuGetCommand@2
  name: 'NugetRestore'
  displayName: 'Nuget restore packages'
  inputs:
    command: 'restore'
    restoreSolution: '${solution}'
    feedsToUse: 'select'
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.x'

- task: DotNetCoreCLI@2
  name: 'Publish'
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(project)'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false
- task: CmdLine@2
  inputs:
    script: 'del $(Build.ArtifactStagingDirectory)\Eefa.Inventory.WebApi\appsettings.json'
- task: PublishBuildArtifacts@1
  name: 'PublishBuildArtifacts'
  displayName: 'Publish build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Eefa.Inventory.WebApi'
    publishLocation: 'Container'

- task: IISWebAppManagementOnMachineGroup@0
  name: 'StopIIS'
  displayName: 'Stop IIS website'
  inputs:
    IISDeploymentType: 'IISWebsite'
    ActionIISWebsite: 'StopWebsite'
    StartStopWebsiteName: '${{ variables.IISWebsiteName }}'
    
- task: IISWebAppDeploymentOnMachineGroup@0
  name: 'DeployIIS'
  displayName: 'Deploy IIS Website'
  inputs:
    WebSiteName: '${{ variables.IISWebsiteName }}'
    Package: '$(Build.ArtifactStagingDirectory)\Eefa.Inventory.WebApi'
    TakeAppOfflineFlag: true

- task: IISWebAppManagementOnMachineGroup@0
  name: 'StartIIS'
  displayName: 'Start IIS website'
  inputs:
    IISDeploymentType: 'IISWebsite'
    ActionIISWebsite: 'StartWebsite'
    StartStopWebsiteName: '${{ variables.IISWebsiteName }}'