// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Invertory.Infrastructure.Context;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Inventory.Domain;

#nullable disable

namespace Eefa.Invertory.Infrastructure.Context.Configurations
{
    public partial class CommodityCategoryPropertyConfiguration : IEntityTypeConfiguration<CommodityCategoryProperty>
    {
        public void Configure(EntityTypeBuilder<CommodityCategoryProperty> entity)
        {
            entity.ToTable("CommodityCategoryProperties", "common");

            entity.HasComment("ویژگی های گروه کالا");

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.CategoryId).HasComment("کد گروه");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.LevelCode)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("کد سطح");

            entity.Property(e => e.MeasureId).HasComment("کد واحد اندازه گیری");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OrderIndex).HasComment("ترتیب نمایش");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.ParentId).HasComment("کد والد");

            entity.Property(e => e.PropertyTypeBaseId).HasComment("قوانین حاکم بر مولفه");

            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("عنوان");

            entity.Property(e => e.UniqueName)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("نام اختصاصی");

            entity.HasOne(d => d.Category)
                .WithMany(p => p.CommodityCategoryProperties)
                .HasForeignKey(d => d.CategoryId)
                .HasConstraintName("FK_CommodityCategoryProperties_CommodityCategory");

            entity.HasOne(d => d.Measure)
                .WithMany(p => p.CommodityCategoryProperties)
                .HasForeignKey(d => d.MeasureId)
                .HasConstraintName("FK_CommodityCategoryProperties_MeasureUnit");

            entity.HasOne(d => d.Parent)
                .WithMany(p => p.InverseParent)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK_CommodityCategoryProperties_CommodityCategoryProperties");

            entity.HasOne(d => d.PropertyTypeBase)
                .WithMany(p => p.CommodityCategoryProperties)
                .HasForeignKey(d => d.PropertyTypeBaseId)
                .HasConstraintName("FK_CommodityCategoryProperties_BaseValues");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CommodityCategoryProperty> entity);
    }
}
