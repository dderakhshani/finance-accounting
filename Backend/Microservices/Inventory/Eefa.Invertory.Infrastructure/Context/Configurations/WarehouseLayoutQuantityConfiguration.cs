// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Invertory.Infrastructure.Context;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Inventory.Domain;


#nullable disable

namespace Eefa.Invertory.Infrastructure.Context.Configurations
{
    public partial class WarehouseLayoutQuantityConfiguration : IEntityTypeConfiguration<WarehouseLayoutQuantity>
    {
        public void Configure(EntityTypeBuilder<WarehouseLayoutQuantity> entity)
        {
            entity.ToTable("WarehouseLayoutQuantities", "inventory");

            entity.HasComment("مقادیر موقعیت های انبار");

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.CommodityId).HasComment("کد کالا");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.Quantity).HasComment("تعداد");

            entity.Property(e => e.WarehouseLayoutId).HasComment("کد چیدمان انبار");

            //entity.HasOne(d => d.Commodity)
            //    .WithMany(p => p.WarehouseLayoutQuantities)
            //    .HasForeignKey(d => d.CommodityId)
            //    .OnDelete(DeleteBehavior.ClientSetNull)
            //    .HasConstraintName("FK_WarehouseLayoutQuantities_Commodity");

            //entity.HasOne(d => d.WarehouseLayout)
            //    .WithMany(p => p.WarehouseLayoutQuantities)
            //    .HasForeignKey(d => d.WarehouseLayoutId)
            //    .OnDelete(DeleteBehavior.ClientSetNull)
            //    .HasConstraintName("FK_WarehouseLayoutQuantities_WarehouseLayout");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<WarehouseLayoutQuantity> entity);
    }
}
