// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.WorkflowAdmin.WebApi.reverese;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.WorkflowAdmin.WebApi.Domain.Databases.Entities;

#nullable disable

namespace Eefa.WorkflowAdmin.WebApi.reverese.Configurations
{
    public partial class CorrectionRequestsConfiguration : IEntityTypeConfiguration<CorrectionRequest>
    {
        public void Configure(EntityTypeBuilder<CorrectionRequest> entity)
        {
            entity.Property(e => e.Changes).IsRequired();

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.Description).HasMaxLength(500);
            entity.Property(e => e.CallBack).HasMaxLength(100);
            entity.Property(e => e.PayLoad);

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.HasOne(d => d.CreatedBy)
                .WithMany(p => p.CorrectionRequestsCreatedBies)
                .HasForeignKey(d => d.CreatedById)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CorrectionRequests_Users");

            entity.HasOne(d => d.Document)
                .WithMany(p => p.CorrectionRequests)
                .HasForeignKey(d => d.DocumentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CorrectionRequests_DocumentHeads");

            entity.HasOne(d => d.Menu)
                .WithMany(p => p.CorrectionRequests)
                .HasForeignKey(d => d.MenuId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CorrectionRequests_MenuItems");

            entity.HasOne(d => d.ModifiedBy)
                .WithMany(p => p.CorrectionRequestsModifiedBies)
                .HasForeignKey(d => d.ModifiedById)
                .HasConstraintName("FK_CorrectionRequests_Users1");

            entity.HasOne(d => d.OwnerRole)
                .WithMany(p => p.CorrectionRequests)
                .HasForeignKey(d => d.OwnerRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CorrectionRequests_Roles");

            entity.HasOne(d => d.VerifierUser)
                .WithMany(p => p.CorrectionRequestsVerifierUsers)
                .HasForeignKey(d => d.VerifierUserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CorrectionRequests_Users2");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CorrectionRequest> entity);
    }
}
