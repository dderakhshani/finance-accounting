// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Admin.Data.reverse;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

using Eefa.WorkflowAdmin.WebApi.Domain.Databases.Entities;

#nullable disable

namespace Eefa.Admin.Data.reverse.Configurations
{
    public partial class BanksConfiguration : IEntityTypeConfiguration<Bank>
    {
        public void Configure(EntityTypeBuilder<Bank> entity)
        {
            entity.ToTable("Bank", "bursary");

            entity.HasComment("بانک ها");

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("کد");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.Descriptions)
                .HasMaxLength(250)
                .HasComment("توضیحات");

            entity.Property(e => e.GlobalCode)
                .HasMaxLength(50)
                .HasComment("کد شعبه در بانک مرکزی");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.ManagerFullName)
                .HasMaxLength(100)
                .HasComment("نام مدیر بانک");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.SwiftCode)
                .HasMaxLength(50)
                .HasComment("سوئیفت");

            entity.Property(e => e.TelephoneJson)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("شماره تلفن");

            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("عنوان");

            entity.Property(e => e.TypeBaseId).HasComment("نوع بانک - موسسه مالی اعتباری، قرض الحسنه و ...");

            entity.HasOne(d => d.CreatedBy)
                .WithMany(p => p.BankCreatedBies)
                .HasForeignKey(d => d.CreatedById)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Banks_Users");

            entity.HasOne(d => d.ModifiedBy)
                .WithMany(p => p.BankModifiedBies)
                .HasForeignKey(d => d.ModifiedById)
                .HasConstraintName("FK_Banks_Users1");

            entity.HasOne(d => d.OwnerRole)
                .WithMany(p => p.Banks)
                .HasForeignKey(d => d.OwnerRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Banks_Roles");

            entity.HasOne(d => d.TypeBase)
                .WithMany(p => p.Banks)
                .HasForeignKey(d => d.TypeBaseId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Banks_BaseValues");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Bank> entity);
    }
}
