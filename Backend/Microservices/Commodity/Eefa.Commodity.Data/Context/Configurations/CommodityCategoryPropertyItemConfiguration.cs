// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Commodity.Data.Context;
using Eefa.Commodity.Data.Entities;
using Eefa.Common;
using Eefa.Common.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace Eefa.Commodity.Data.Context.Configurations
{
    public partial class CommodityCategoryPropertyItemConfiguration : IEntityTypeConfiguration<CommodityCategoryPropertyItem>
    {
        public void Configure(EntityTypeBuilder<CommodityCategoryPropertyItem> entity)
        {
            entity.ToTable("CommodityCategoryPropertyItems", "common", tb => tb.HasComment("آیتم های ویژگی گروه کالا"));

            entity.Property(e => e.Id).HasComment("شناسه");
            entity.Property(e => e.CategoryPropertyId).HasComment("کد ویژگی گروه");
            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .HasComment("کد");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");
            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");
            entity.Property(e => e.IsActive).HasComment("فعال است؟");
            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");
            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");
            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");
            entity.Property(e => e.OrderIndex).HasComment("ترتیب نمایش");
            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");
            entity.Property(e => e.ParentId).HasComment("کد والد");
            entity.Property(e => e.Title).HasComment("عنوان");
            entity.Property(e => e.UniqueName).HasComment("نام اختصاصی");

            entity.HasOne(d => d.CategoryProperty).WithMany(p => p.CommodityCategoryPropertyItems)
                .HasForeignKey(d => d.CategoryPropertyId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CommodityCategoryPropertyItems_CommodityCategoryProperties");

            entity.HasOne(d => d.Parent).WithMany(p => p.InverseParent)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK_CommodityCategoryPropertyItems_CommodityCategoryPropertyItems");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CommodityCategoryPropertyItem> entity);
    }
}
