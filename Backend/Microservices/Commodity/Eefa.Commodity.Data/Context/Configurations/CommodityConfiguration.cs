// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Commodity.Data.Context;
using Eefa.Commodity.Data.Entities;
using Eefa.Common;
using Eefa.Common.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace Eefa.Commodity.Data.Context.Configurations
{
    public partial class CommodityConfiguration : IEntityTypeConfiguration<Commodity>
    {
        public void Configure(EntityTypeBuilder<Commodity> entity)
        {
            entity.HasKey(e => e.Id).HasName("PK_Items");

            entity.ToTable("Commodities", "common", tb => tb.HasComment("کالا ها"));

            entity.HasIndex(e => e.Code, "IX_Commodities_Code").IsUnique();

            entity.HasIndex(e => e.MeasureId, "IX_Commodities_MeasureId");

            entity.Property(e => e.Id).HasComment("شناسه");
            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .HasComment("کد محصول");
            entity.Property(e => e.CommodityCategoryId).HasComment("کد گروه کالا");
            entity.Property(e => e.CommodityNationalId)
                .HasMaxLength(50)
                .HasComment("شناسه ملی کالا ");
            entity.Property(e => e.CommodityNationalTitle)
                .HasMaxLength(50)
                .HasComment("عنوان شناسه ملی کالا");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");
            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");
            entity.Property(e => e.Descriptions)
                .HasMaxLength(1000)
                .HasComment("توضیحات");
            entity.Property(e => e.InventoryType)
                .HasDefaultValue(0)
                .HasComment("");
            entity.Property(e => e.IsActive)
                .HasDefaultValue(true)
                .HasComment("فعال است ");
            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");
            entity.Property(e => e.LevelCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("کد سطح");
            entity.Property(e => e.MaximumQuantity).HasComment("حداکثر تعداد");
            entity.Property(e => e.MeasureId).HasComment("کد واحد اندازه گیری");
            entity.Property(e => e.MinimumQuantity)
                .HasDefaultValue(0.0)
                .HasComment("حداقل تعداد");
            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");
            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");
            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");
            entity.Property(e => e.ParentId).HasComment("کد والد");
            entity.Property(e => e.PricingTypeBaseId).HasComment("نوع محاسبه قیمت");
            entity.Property(e => e.RowVersion)
                .IsRowVersion()
                .IsConcurrencyToken();
            entity.Property(e => e.SecondaryCode)
                .HasMaxLength(50)
                .HasComment("کد محصول");
            entity.Property(e => e.ThirdCode).HasMaxLength(50);
            entity.Property(e => e.Title)
                .HasMaxLength(500)
                .HasComment("عنوان");
            entity.Property(e => e.YearId).HasComment("کد سال");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Commodity> entity);
    }
}
