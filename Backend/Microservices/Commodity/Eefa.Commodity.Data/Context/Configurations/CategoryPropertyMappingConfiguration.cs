// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Commodity.Data.Context;
using Eefa.Commodity.Data.Entities;
using Eefa.Common;
using Eefa.Common.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace Eefa.Commodity.Data.Context.Configurations
{
    public partial class CategoryPropertyMappingConfiguration : IEntityTypeConfiguration<CategoryPropertyMapping>
    {
        public void Configure(EntityTypeBuilder<CategoryPropertyMapping> entity)
        {
            entity.HasKey(e => e.Id).HasName("PK_CategoryPropertyMapping");

            entity.ToTable("CategoryPropertyMappings", "common", tb => tb.HasComment("نگاشت بین گروه ها و مشخصات کالا"));

            entity.Property(e => e.Id).HasComment("شناسه");
            entity.Property(e => e.CommodityCategoryPropertyItems1).HasComment("آیتم ویژگی گروه محصول1");
            entity.Property(e => e.CommodityCategoryPropertyItems2).HasComment("آیتم ویژگی گروه محصول2");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");
            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");
            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");
            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");
            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");
            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.HasOne(d => d.CommodityCategoryPropertyItems1Navigation).WithMany(p => p.CategoryPropertyMappingCommodityCategoryPropertyItems1Navigation)
                .HasForeignKey(d => d.CommodityCategoryPropertyItems1)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CategoryPropertyMapping_CommodityCategoryPropertyItems");

            entity.HasOne(d => d.CommodityCategoryPropertyItems2Navigation).WithMany(p => p.CategoryPropertyMappingCommodityCategoryPropertyItems2Navigation)
                .HasForeignKey(d => d.CommodityCategoryPropertyItems2)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CategoryPropertyMapping_CommodityCategoryPropertyItems1");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CategoryPropertyMapping> entity);
    }
}
