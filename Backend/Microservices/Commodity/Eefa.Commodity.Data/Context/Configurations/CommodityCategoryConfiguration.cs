// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Commodity.Data.Context;
using Eefa.Commodity.Data.Entities;
using Eefa.Common;
using Eefa.Common.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace Eefa.Commodity.Data.Context.Configurations
{
    public partial class CommodityCategoryConfiguration : IEntityTypeConfiguration<CommodityCategory>
    {
        public void Configure(EntityTypeBuilder<CommodityCategory> entity)
        {
            entity.HasKey(e => e.Id).HasName("PK_ItemsCategory");

            entity.ToTable("CommodityCategories", "common", tb =>
                {
                    tb.HasComment("گروه های کالا");
                    tb.HasTrigger("CommodityCategoriesInsertTrriger");
                });

            entity.HasIndex(e => e.Code, "IX_CommodityCategories").IsUnique();

            entity.Property(e => e.Id).HasComment("شناسه");
            entity.Property(e => e.Code).HasMaxLength(50);
            entity.Property(e => e.CodingMode)
                .HasDefaultValue(1)
                .HasComment("1 کد سازی برا اساس گروه\r\n2 کد سازی بر اساس مشخصات");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");
            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");
            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");
            entity.Property(e => e.IsReadOnly).HasComment("آیا فقط قابل خواندن است؟");
            entity.Property(e => e.LevelCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("کد سطح");
            entity.Property(e => e.MeasureId).HasComment("کدواحد اصلی کالا");
            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");
            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");
            entity.Property(e => e.OrderIndex).HasComment("ترتیب نمایش");
            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");
            entity.Property(e => e.ParentId).HasComment("کد والد");
            entity.Property(e => e.RequireParentProduct).HasComment("this.Parent().Commodities");
            entity.Property(e => e.RowVersion)
                .IsRowVersion()
                .IsConcurrencyToken();
            entity.Property(e => e.Title)
                .HasMaxLength(250)
                .HasComment("عنوان");

            entity.HasOne(d => d.Measure).WithMany(p => p.CommodityCategories)
                .HasForeignKey(d => d.MeasureId)
                .HasConstraintName("FK_CommodityCategory_MeasureUnit");

            entity.HasOne(d => d.Parent).WithMany(p => p.InverseParent)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK_CommodityCategory_CommodityCategory");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CommodityCategory> entity);
    }
}
