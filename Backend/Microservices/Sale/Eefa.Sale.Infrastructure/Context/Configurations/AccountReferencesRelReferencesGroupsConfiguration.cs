// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Eefa.Sale.Domain.reverse;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;
using Eefa.Sale.Domain.Aggregates;

#nullable disable

namespace Eefa.Sale.Domain.reverse.Configurations
{
    public partial class AccountReferencesRelReferencesGroupsConfiguration : IEntityTypeConfiguration<AccountReferencesRelReferencesGroups>
    {
        public void Configure(EntityTypeBuilder<AccountReferencesRelReferencesGroups> entity)
        {
            entity.ToTable("AccountReferencesRelReferencesGroups", "accounting");

            entity.HasComment("ارتباط بین طرف حسابها و گروه طرف حساب");

            entity.Property(e => e.Id).HasComment("شناسه");

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان ایجاد");

            entity.Property(e => e.CreatedById).HasComment("ایجاد کننده");

            entity.Property(e => e.IsDeleted).HasComment("آیا حذف شده است؟");

            entity.Property(e => e.ModifiedAt)
                .HasDefaultValueSql("(getdate())")
                .HasComment("تاریخ و زمان اصلاح");

            entity.Property(e => e.ModifiedById).HasComment("اصلاح کننده");

            entity.Property(e => e.OwnerRoleId).HasComment("نقش صاحب سند");

            entity.Property(e => e.ReferenceGroupId).HasComment("کد گروه طرف حساب");

            entity.Property(e => e.ReferenceId).HasComment("کد طرف حساب");

            entity.HasOne(d => d.ReferenceGroup)
                .WithMany(p => p.AccountReferencesRelReferencesGroups)
                .HasForeignKey(d => d.ReferenceGroupId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ReferencesRelReferencesGroups_ReferencesGroups");

            entity.HasOne(d => d.Reference)
                .WithMany(p => p.AccountReferencesRelReferencesGroups)
                .HasForeignKey(d => d.ReferenceId)
                .HasConstraintName("FK_ReferencesRelReferencesGroups_References");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<AccountReferencesRelReferencesGroups> entity);
    }
}
